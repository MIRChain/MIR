

#pragma once

#ifndef GO_MOC_687eda_H
#define GO_MOC_687eda_H

#include <stdint.h>

#ifdef __cplusplus
class ApproveTxCtx687eda;
void ApproveTxCtx687eda_ApproveTxCtx687eda_QRegisterMetaTypes();
class LoginContext687eda;
void LoginContext687eda_LoginContext687eda_QRegisterMetaTypes();
class TxListModel687eda;
void TxListModel687eda_TxListModel687eda_QRegisterMetaTypes();
class TxListCtx687eda;
void TxListCtx687eda_TxListCtx687eda_QRegisterMetaTypes();
class ApproveListingCtx687eda;
void ApproveListingCtx687eda_ApproveListingCtx687eda_QRegisterMetaTypes();
class ApproveNewAccountCtx687eda;
void ApproveNewAccountCtx687eda_ApproveNewAccountCtx687eda_QRegisterMetaTypes();
class ApproveSignDataCtx687eda;
void ApproveSignDataCtx687eda_ApproveSignDataCtx687eda_QRegisterMetaTypes();
class CustomListModel687eda;
void CustomListModel687eda_CustomListModel687eda_QRegisterMetaTypes();
class TxListAccountsModel687eda;
void TxListAccountsModel687eda_TxListAccountsModel687eda_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; void* ptr; };
struct Moc_PackedList { void* data; long long len; };
void ApproveNewAccountCtx687eda_ConnectClicked(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectClicked(void* ptr);
void ApproveNewAccountCtx687eda_Clicked(void* ptr, int b);
void ApproveNewAccountCtx687eda_ConnectBack(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectBack(void* ptr);
void ApproveNewAccountCtx687eda_Back(void* ptr);
void ApproveNewAccountCtx687eda_ConnectPasswordEdited(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectPasswordEdited(void* ptr);
void ApproveNewAccountCtx687eda_PasswordEdited(void* ptr, struct Moc_PackedString b);
void ApproveNewAccountCtx687eda_ConnectConfirmPasswordEdited(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectConfirmPasswordEdited(void* ptr);
void ApproveNewAccountCtx687eda_ConfirmPasswordEdited(void* ptr, struct Moc_PackedString b);
struct Moc_PackedString ApproveNewAccountCtx687eda_Remote(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx687eda_RemoteDefault(void* ptr);
void ApproveNewAccountCtx687eda_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveNewAccountCtx687eda_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveNewAccountCtx687eda_ConnectRemoteChanged(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectRemoteChanged(void* ptr);
void ApproveNewAccountCtx687eda_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveNewAccountCtx687eda_Transport(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx687eda_TransportDefault(void* ptr);
void ApproveNewAccountCtx687eda_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveNewAccountCtx687eda_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveNewAccountCtx687eda_ConnectTransportChanged(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectTransportChanged(void* ptr);
void ApproveNewAccountCtx687eda_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveNewAccountCtx687eda_Endpoint(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx687eda_EndpointDefault(void* ptr);
void ApproveNewAccountCtx687eda_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveNewAccountCtx687eda_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveNewAccountCtx687eda_ConnectEndpointChanged(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectEndpointChanged(void* ptr);
void ApproveNewAccountCtx687eda_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveNewAccountCtx687eda_Password(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx687eda_PasswordDefault(void* ptr);
void ApproveNewAccountCtx687eda_SetPassword(void* ptr, struct Moc_PackedString password);
void ApproveNewAccountCtx687eda_SetPasswordDefault(void* ptr, struct Moc_PackedString password);
void ApproveNewAccountCtx687eda_ConnectPasswordChanged(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectPasswordChanged(void* ptr);
void ApproveNewAccountCtx687eda_PasswordChanged(void* ptr, struct Moc_PackedString password);
struct Moc_PackedString ApproveNewAccountCtx687eda_ConfirmPassword(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx687eda_ConfirmPasswordDefault(void* ptr);
void ApproveNewAccountCtx687eda_SetConfirmPassword(void* ptr, struct Moc_PackedString confirmPassword);
void ApproveNewAccountCtx687eda_SetConfirmPasswordDefault(void* ptr, struct Moc_PackedString confirmPassword);
void ApproveNewAccountCtx687eda_ConnectConfirmPasswordChanged(void* ptr, long long t);
void ApproveNewAccountCtx687eda_DisconnectConfirmPasswordChanged(void* ptr);
void ApproveNewAccountCtx687eda_ConfirmPasswordChanged(void* ptr, struct Moc_PackedString confirmPassword);
int ApproveNewAccountCtx687eda_ApproveNewAccountCtx687eda_QRegisterMetaType();
int ApproveNewAccountCtx687eda_ApproveNewAccountCtx687eda_QRegisterMetaType2(char* typeName);
int ApproveNewAccountCtx687eda_ApproveNewAccountCtx687eda_QmlRegisterType();
int ApproveNewAccountCtx687eda_ApproveNewAccountCtx687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int ApproveNewAccountCtx687eda_ApproveNewAccountCtx687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
void* ApproveNewAccountCtx687eda___children_atList(void* ptr, int i);
void ApproveNewAccountCtx687eda___children_setList(void* ptr, void* i);
void* ApproveNewAccountCtx687eda___children_newList(void* ptr);
void* ApproveNewAccountCtx687eda___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveNewAccountCtx687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveNewAccountCtx687eda___dynamicPropertyNames_newList(void* ptr);
void* ApproveNewAccountCtx687eda___findChildren_atList(void* ptr, int i);
void ApproveNewAccountCtx687eda___findChildren_setList(void* ptr, void* i);
void* ApproveNewAccountCtx687eda___findChildren_newList(void* ptr);
void* ApproveNewAccountCtx687eda___findChildren_atList3(void* ptr, int i);
void ApproveNewAccountCtx687eda___findChildren_setList3(void* ptr, void* i);
void* ApproveNewAccountCtx687eda___findChildren_newList3(void* ptr);
void* ApproveNewAccountCtx687eda_NewApproveNewAccountCtx(void* parent);
void ApproveNewAccountCtx687eda_DestroyApproveNewAccountCtx(void* ptr);
void ApproveNewAccountCtx687eda_DestroyApproveNewAccountCtxDefault(void* ptr);
void ApproveNewAccountCtx687eda_ChildEventDefault(void* ptr, void* event);
void ApproveNewAccountCtx687eda_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveNewAccountCtx687eda_CustomEventDefault(void* ptr, void* event);
void ApproveNewAccountCtx687eda_DeleteLaterDefault(void* ptr);
void ApproveNewAccountCtx687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char ApproveNewAccountCtx687eda_EventDefault(void* ptr, void* e);
char ApproveNewAccountCtx687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void ApproveNewAccountCtx687eda_TimerEventDefault(void* ptr, void* event);
void TxListAccountsModel687eda_ConnectAdd(void* ptr, long long t);
void TxListAccountsModel687eda_DisconnectAdd(void* ptr);
void TxListAccountsModel687eda_Add(void* ptr, struct Moc_PackedString tx);
int TxListAccountsModel687eda_TxListAccountsModel687eda_QRegisterMetaType();
int TxListAccountsModel687eda_TxListAccountsModel687eda_QRegisterMetaType2(char* typeName);
int TxListAccountsModel687eda_TxListAccountsModel687eda_QmlRegisterType();
int TxListAccountsModel687eda_TxListAccountsModel687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int TxListAccountsModel687eda_TxListAccountsModel687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
int TxListAccountsModel687eda_____itemData_keyList_atList(void* ptr, int i);
void TxListAccountsModel687eda_____itemData_keyList_setList(void* ptr, int i);
void* TxListAccountsModel687eda_____itemData_keyList_newList(void* ptr);
int TxListAccountsModel687eda_____roleNames_keyList_atList(void* ptr, int i);
void TxListAccountsModel687eda_____roleNames_keyList_setList(void* ptr, int i);
void* TxListAccountsModel687eda_____roleNames_keyList_newList(void* ptr);
int TxListAccountsModel687eda_____setItemData_roles_keyList_atList(void* ptr, int i);
void TxListAccountsModel687eda_____setItemData_roles_keyList_setList(void* ptr, int i);
void* TxListAccountsModel687eda_____setItemData_roles_keyList_newList(void* ptr);
void* TxListAccountsModel687eda___changePersistentIndexList_from_atList(void* ptr, int i);
void TxListAccountsModel687eda___changePersistentIndexList_from_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___changePersistentIndexList_from_newList(void* ptr);
void* TxListAccountsModel687eda___changePersistentIndexList_to_atList(void* ptr, int i);
void TxListAccountsModel687eda___changePersistentIndexList_to_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___changePersistentIndexList_to_newList(void* ptr);
int TxListAccountsModel687eda___dataChanged_roles_atList(void* ptr, int i);
void TxListAccountsModel687eda___dataChanged_roles_setList(void* ptr, int i);
void* TxListAccountsModel687eda___dataChanged_roles_newList(void* ptr);
void* TxListAccountsModel687eda___itemData_atList(void* ptr, int v, int i);
void TxListAccountsModel687eda___itemData_setList(void* ptr, int key, void* i);
void* TxListAccountsModel687eda___itemData_newList(void* ptr);
struct Moc_PackedList TxListAccountsModel687eda___itemData_keyList(void* ptr);
void* TxListAccountsModel687eda___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void TxListAccountsModel687eda___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___layoutAboutToBeChanged_parents_newList(void* ptr);
void* TxListAccountsModel687eda___layoutChanged_parents_atList(void* ptr, int i);
void TxListAccountsModel687eda___layoutChanged_parents_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___layoutChanged_parents_newList(void* ptr);
void* TxListAccountsModel687eda___match_atList(void* ptr, int i);
void TxListAccountsModel687eda___match_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___match_newList(void* ptr);
void* TxListAccountsModel687eda___mimeData_indexes_atList(void* ptr, int i);
void TxListAccountsModel687eda___mimeData_indexes_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___mimeData_indexes_newList(void* ptr);
void* TxListAccountsModel687eda___persistentIndexList_atList(void* ptr, int i);
void TxListAccountsModel687eda___persistentIndexList_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___persistentIndexList_newList(void* ptr);
void* TxListAccountsModel687eda___roleNames_atList(void* ptr, int v, int i);
void TxListAccountsModel687eda___roleNames_setList(void* ptr, int key, void* i);
void* TxListAccountsModel687eda___roleNames_newList(void* ptr);
struct Moc_PackedList TxListAccountsModel687eda___roleNames_keyList(void* ptr);
void* TxListAccountsModel687eda___setItemData_roles_atList(void* ptr, int v, int i);
void TxListAccountsModel687eda___setItemData_roles_setList(void* ptr, int key, void* i);
void* TxListAccountsModel687eda___setItemData_roles_newList(void* ptr);
struct Moc_PackedList TxListAccountsModel687eda___setItemData_roles_keyList(void* ptr);
int TxListAccountsModel687eda_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListAccountsModel687eda_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListAccountsModel687eda_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int TxListAccountsModel687eda_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListAccountsModel687eda_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListAccountsModel687eda_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* TxListAccountsModel687eda___children_atList(void* ptr, int i);
void TxListAccountsModel687eda___children_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___children_newList(void* ptr);
void* TxListAccountsModel687eda___dynamicPropertyNames_atList(void* ptr, int i);
void TxListAccountsModel687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___dynamicPropertyNames_newList(void* ptr);
void* TxListAccountsModel687eda___findChildren_atList(void* ptr, int i);
void TxListAccountsModel687eda___findChildren_setList(void* ptr, void* i);
void* TxListAccountsModel687eda___findChildren_newList(void* ptr);
void* TxListAccountsModel687eda___findChildren_atList3(void* ptr, int i);
void TxListAccountsModel687eda___findChildren_setList3(void* ptr, void* i);
void* TxListAccountsModel687eda___findChildren_newList3(void* ptr);
void* TxListAccountsModel687eda_NewTxListAccountsModel(void* parent);
void TxListAccountsModel687eda_DestroyTxListAccountsModel(void* ptr);
void TxListAccountsModel687eda_DestroyTxListAccountsModelDefault(void* ptr);
char TxListAccountsModel687eda_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long TxListAccountsModel687eda_FlagsDefault(void* ptr, void* index);
void* TxListAccountsModel687eda_IndexDefault(void* ptr, int row, int column, void* parent);
void* TxListAccountsModel687eda_SiblingDefault(void* ptr, int row, int column, void* idx);
void* TxListAccountsModel687eda_BuddyDefault(void* ptr, void* index);
char TxListAccountsModel687eda_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char TxListAccountsModel687eda_CanFetchMoreDefault(void* ptr, void* parent);
int TxListAccountsModel687eda_ColumnCountDefault(void* ptr, void* parent);
void* TxListAccountsModel687eda_DataDefault(void* ptr, void* index, int role);
void TxListAccountsModel687eda_FetchMoreDefault(void* ptr, void* parent);
char TxListAccountsModel687eda_HasChildrenDefault(void* ptr, void* parent);
void* TxListAccountsModel687eda_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char TxListAccountsModel687eda_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListAccountsModel687eda_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList TxListAccountsModel687eda_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList TxListAccountsModel687eda_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* TxListAccountsModel687eda_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString TxListAccountsModel687eda_MimeTypesDefault(void* ptr);
char TxListAccountsModel687eda_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char TxListAccountsModel687eda_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* TxListAccountsModel687eda_ParentDefault(void* ptr, void* index);
char TxListAccountsModel687eda_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListAccountsModel687eda_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void TxListAccountsModel687eda_ResetInternalDataDefault(void* ptr);
void TxListAccountsModel687eda_RevertDefault(void* ptr);
struct Moc_PackedList TxListAccountsModel687eda_RoleNamesDefault(void* ptr);
int TxListAccountsModel687eda_RowCountDefault(void* ptr, void* parent);
char TxListAccountsModel687eda_SetDataDefault(void* ptr, void* index, void* value, int role);
char TxListAccountsModel687eda_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char TxListAccountsModel687eda_SetItemDataDefault(void* ptr, void* index, void* roles);
void TxListAccountsModel687eda_SortDefault(void* ptr, int column, long long order);
void* TxListAccountsModel687eda_SpanDefault(void* ptr, void* index);
char TxListAccountsModel687eda_SubmitDefault(void* ptr);
long long TxListAccountsModel687eda_SupportedDragActionsDefault(void* ptr);
long long TxListAccountsModel687eda_SupportedDropActionsDefault(void* ptr);
void TxListAccountsModel687eda_ChildEventDefault(void* ptr, void* event);
void TxListAccountsModel687eda_ConnectNotifyDefault(void* ptr, void* sign);
void TxListAccountsModel687eda_CustomEventDefault(void* ptr, void* event);
void TxListAccountsModel687eda_DeleteLaterDefault(void* ptr);
void TxListAccountsModel687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char TxListAccountsModel687eda_EventDefault(void* ptr, void* e);
char TxListAccountsModel687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void TxListAccountsModel687eda_TimerEventDefault(void* ptr, void* event);
void TxListCtx687eda_ConnectClicked(void* ptr, long long t);
void TxListCtx687eda_DisconnectClicked(void* ptr);
void TxListCtx687eda_Clicked(void* ptr, int b);
struct Moc_PackedString TxListCtx687eda_ShortenAddress(void* ptr);
struct Moc_PackedString TxListCtx687eda_ShortenAddressDefault(void* ptr);
void TxListCtx687eda_SetShortenAddress(void* ptr, struct Moc_PackedString shortenAddress);
void TxListCtx687eda_SetShortenAddressDefault(void* ptr, struct Moc_PackedString shortenAddress);
void TxListCtx687eda_ConnectShortenAddressChanged(void* ptr, long long t);
void TxListCtx687eda_DisconnectShortenAddressChanged(void* ptr);
void TxListCtx687eda_ShortenAddressChanged(void* ptr, struct Moc_PackedString shortenAddress);
struct Moc_PackedString TxListCtx687eda_SelectedSrc(void* ptr);
struct Moc_PackedString TxListCtx687eda_SelectedSrcDefault(void* ptr);
void TxListCtx687eda_SetSelectedSrc(void* ptr, struct Moc_PackedString selectedSrc);
void TxListCtx687eda_SetSelectedSrcDefault(void* ptr, struct Moc_PackedString selectedSrc);
void TxListCtx687eda_ConnectSelectedSrcChanged(void* ptr, long long t);
void TxListCtx687eda_DisconnectSelectedSrcChanged(void* ptr);
void TxListCtx687eda_SelectedSrcChanged(void* ptr, struct Moc_PackedString selectedSrc);
int TxListCtx687eda_TxListCtx687eda_QRegisterMetaType();
int TxListCtx687eda_TxListCtx687eda_QRegisterMetaType2(char* typeName);
int TxListCtx687eda_TxListCtx687eda_QmlRegisterType();
int TxListCtx687eda_TxListCtx687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int TxListCtx687eda_TxListCtx687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
void* TxListCtx687eda___children_atList(void* ptr, int i);
void TxListCtx687eda___children_setList(void* ptr, void* i);
void* TxListCtx687eda___children_newList(void* ptr);
void* TxListCtx687eda___dynamicPropertyNames_atList(void* ptr, int i);
void TxListCtx687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* TxListCtx687eda___dynamicPropertyNames_newList(void* ptr);
void* TxListCtx687eda___findChildren_atList(void* ptr, int i);
void TxListCtx687eda___findChildren_setList(void* ptr, void* i);
void* TxListCtx687eda___findChildren_newList(void* ptr);
void* TxListCtx687eda___findChildren_atList3(void* ptr, int i);
void TxListCtx687eda___findChildren_setList3(void* ptr, void* i);
void* TxListCtx687eda___findChildren_newList3(void* ptr);
void* TxListCtx687eda_NewTxListCtx(void* parent);
void TxListCtx687eda_DestroyTxListCtx(void* ptr);
void TxListCtx687eda_DestroyTxListCtxDefault(void* ptr);
void TxListCtx687eda_ChildEventDefault(void* ptr, void* event);
void TxListCtx687eda_ConnectNotifyDefault(void* ptr, void* sign);
void TxListCtx687eda_CustomEventDefault(void* ptr, void* event);
void TxListCtx687eda_DeleteLaterDefault(void* ptr);
void TxListCtx687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char TxListCtx687eda_EventDefault(void* ptr, void* e);
char TxListCtx687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void TxListCtx687eda_TimerEventDefault(void* ptr, void* event);
void TxListModel687eda_ConnectClear(void* ptr, long long t);
void TxListModel687eda_DisconnectClear(void* ptr);
void TxListModel687eda_Clear(void* ptr);
void TxListModel687eda_ConnectAdd(void* ptr, long long t);
void TxListModel687eda_DisconnectAdd(void* ptr);
void TxListModel687eda_Add(void* ptr, uintptr_t tx);
void TxListModel687eda_ConnectRemove(void* ptr, long long t);
void TxListModel687eda_DisconnectRemove(void* ptr);
void TxListModel687eda_Remove(void* ptr, int i);
char TxListModel687eda_IsEmpty(void* ptr);
char TxListModel687eda_IsEmptyDefault(void* ptr);
void TxListModel687eda_SetIsEmpty(void* ptr, char isEmpty);
void TxListModel687eda_SetIsEmptyDefault(void* ptr, char isEmpty);
void TxListModel687eda_ConnectIsEmptyChanged(void* ptr, long long t);
void TxListModel687eda_DisconnectIsEmptyChanged(void* ptr);
void TxListModel687eda_IsEmptyChanged(void* ptr, char isEmpty);
int TxListModel687eda_TxListModel687eda_QRegisterMetaType();
int TxListModel687eda_TxListModel687eda_QRegisterMetaType2(char* typeName);
int TxListModel687eda_TxListModel687eda_QmlRegisterType();
int TxListModel687eda_TxListModel687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int TxListModel687eda_TxListModel687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
int TxListModel687eda_____itemData_keyList_atList(void* ptr, int i);
void TxListModel687eda_____itemData_keyList_setList(void* ptr, int i);
void* TxListModel687eda_____itemData_keyList_newList(void* ptr);
int TxListModel687eda_____roleNames_keyList_atList(void* ptr, int i);
void TxListModel687eda_____roleNames_keyList_setList(void* ptr, int i);
void* TxListModel687eda_____roleNames_keyList_newList(void* ptr);
int TxListModel687eda_____setItemData_roles_keyList_atList(void* ptr, int i);
void TxListModel687eda_____setItemData_roles_keyList_setList(void* ptr, int i);
void* TxListModel687eda_____setItemData_roles_keyList_newList(void* ptr);
void* TxListModel687eda___changePersistentIndexList_from_atList(void* ptr, int i);
void TxListModel687eda___changePersistentIndexList_from_setList(void* ptr, void* i);
void* TxListModel687eda___changePersistentIndexList_from_newList(void* ptr);
void* TxListModel687eda___changePersistentIndexList_to_atList(void* ptr, int i);
void TxListModel687eda___changePersistentIndexList_to_setList(void* ptr, void* i);
void* TxListModel687eda___changePersistentIndexList_to_newList(void* ptr);
int TxListModel687eda___dataChanged_roles_atList(void* ptr, int i);
void TxListModel687eda___dataChanged_roles_setList(void* ptr, int i);
void* TxListModel687eda___dataChanged_roles_newList(void* ptr);
void* TxListModel687eda___itemData_atList(void* ptr, int v, int i);
void TxListModel687eda___itemData_setList(void* ptr, int key, void* i);
void* TxListModel687eda___itemData_newList(void* ptr);
struct Moc_PackedList TxListModel687eda___itemData_keyList(void* ptr);
void* TxListModel687eda___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void TxListModel687eda___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* TxListModel687eda___layoutAboutToBeChanged_parents_newList(void* ptr);
void* TxListModel687eda___layoutChanged_parents_atList(void* ptr, int i);
void TxListModel687eda___layoutChanged_parents_setList(void* ptr, void* i);
void* TxListModel687eda___layoutChanged_parents_newList(void* ptr);
void* TxListModel687eda___match_atList(void* ptr, int i);
void TxListModel687eda___match_setList(void* ptr, void* i);
void* TxListModel687eda___match_newList(void* ptr);
void* TxListModel687eda___mimeData_indexes_atList(void* ptr, int i);
void TxListModel687eda___mimeData_indexes_setList(void* ptr, void* i);
void* TxListModel687eda___mimeData_indexes_newList(void* ptr);
void* TxListModel687eda___persistentIndexList_atList(void* ptr, int i);
void TxListModel687eda___persistentIndexList_setList(void* ptr, void* i);
void* TxListModel687eda___persistentIndexList_newList(void* ptr);
void* TxListModel687eda___roleNames_atList(void* ptr, int v, int i);
void TxListModel687eda___roleNames_setList(void* ptr, int key, void* i);
void* TxListModel687eda___roleNames_newList(void* ptr);
struct Moc_PackedList TxListModel687eda___roleNames_keyList(void* ptr);
void* TxListModel687eda___setItemData_roles_atList(void* ptr, int v, int i);
void TxListModel687eda___setItemData_roles_setList(void* ptr, int key, void* i);
void* TxListModel687eda___setItemData_roles_newList(void* ptr);
struct Moc_PackedList TxListModel687eda___setItemData_roles_keyList(void* ptr);
int TxListModel687eda_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListModel687eda_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListModel687eda_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int TxListModel687eda_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListModel687eda_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListModel687eda_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* TxListModel687eda___children_atList(void* ptr, int i);
void TxListModel687eda___children_setList(void* ptr, void* i);
void* TxListModel687eda___children_newList(void* ptr);
void* TxListModel687eda___dynamicPropertyNames_atList(void* ptr, int i);
void TxListModel687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* TxListModel687eda___dynamicPropertyNames_newList(void* ptr);
void* TxListModel687eda___findChildren_atList(void* ptr, int i);
void TxListModel687eda___findChildren_setList(void* ptr, void* i);
void* TxListModel687eda___findChildren_newList(void* ptr);
void* TxListModel687eda___findChildren_atList3(void* ptr, int i);
void TxListModel687eda___findChildren_setList3(void* ptr, void* i);
void* TxListModel687eda___findChildren_newList3(void* ptr);
void* TxListModel687eda_NewTxListModel(void* parent);
void TxListModel687eda_DestroyTxListModel(void* ptr);
void TxListModel687eda_DestroyTxListModelDefault(void* ptr);
char TxListModel687eda_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long TxListModel687eda_FlagsDefault(void* ptr, void* index);
void* TxListModel687eda_IndexDefault(void* ptr, int row, int column, void* parent);
void* TxListModel687eda_SiblingDefault(void* ptr, int row, int column, void* idx);
void* TxListModel687eda_BuddyDefault(void* ptr, void* index);
char TxListModel687eda_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char TxListModel687eda_CanFetchMoreDefault(void* ptr, void* parent);
int TxListModel687eda_ColumnCountDefault(void* ptr, void* parent);
void* TxListModel687eda_DataDefault(void* ptr, void* index, int role);
void TxListModel687eda_FetchMoreDefault(void* ptr, void* parent);
char TxListModel687eda_HasChildrenDefault(void* ptr, void* parent);
void* TxListModel687eda_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char TxListModel687eda_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListModel687eda_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList TxListModel687eda_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList TxListModel687eda_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* TxListModel687eda_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString TxListModel687eda_MimeTypesDefault(void* ptr);
char TxListModel687eda_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char TxListModel687eda_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* TxListModel687eda_ParentDefault(void* ptr, void* index);
char TxListModel687eda_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListModel687eda_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void TxListModel687eda_ResetInternalDataDefault(void* ptr);
void TxListModel687eda_RevertDefault(void* ptr);
struct Moc_PackedList TxListModel687eda_RoleNamesDefault(void* ptr);
int TxListModel687eda_RowCountDefault(void* ptr, void* parent);
char TxListModel687eda_SetDataDefault(void* ptr, void* index, void* value, int role);
char TxListModel687eda_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char TxListModel687eda_SetItemDataDefault(void* ptr, void* index, void* roles);
void TxListModel687eda_SortDefault(void* ptr, int column, long long order);
void* TxListModel687eda_SpanDefault(void* ptr, void* index);
char TxListModel687eda_SubmitDefault(void* ptr);
long long TxListModel687eda_SupportedDragActionsDefault(void* ptr);
long long TxListModel687eda_SupportedDropActionsDefault(void* ptr);
void TxListModel687eda_ChildEventDefault(void* ptr, void* event);
void TxListModel687eda_ConnectNotifyDefault(void* ptr, void* sign);
void TxListModel687eda_CustomEventDefault(void* ptr, void* event);
void TxListModel687eda_DeleteLaterDefault(void* ptr);
void TxListModel687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char TxListModel687eda_EventDefault(void* ptr, void* e);
char TxListModel687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void TxListModel687eda_TimerEventDefault(void* ptr, void* event);
void ApproveListingCtx687eda_ConnectBack(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectBack(void* ptr);
void ApproveListingCtx687eda_Back(void* ptr);
void ApproveListingCtx687eda_ConnectApprove(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectApprove(void* ptr);
void ApproveListingCtx687eda_Approve(void* ptr);
void ApproveListingCtx687eda_ConnectReject(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectReject(void* ptr);
void ApproveListingCtx687eda_Reject(void* ptr);
void ApproveListingCtx687eda_ConnectOnCheckStateChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectOnCheckStateChanged(void* ptr);
void ApproveListingCtx687eda_OnCheckStateChanged(void* ptr, int i, char checked);
void ApproveListingCtx687eda_ConnectTriggerUpdate(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectTriggerUpdate(void* ptr);
void ApproveListingCtx687eda_TriggerUpdate(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_Remote(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_RemoteDefault(void* ptr);
void ApproveListingCtx687eda_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveListingCtx687eda_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveListingCtx687eda_ConnectRemoteChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectRemoteChanged(void* ptr);
void ApproveListingCtx687eda_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveListingCtx687eda_Transport(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_TransportDefault(void* ptr);
void ApproveListingCtx687eda_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveListingCtx687eda_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveListingCtx687eda_ConnectTransportChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectTransportChanged(void* ptr);
void ApproveListingCtx687eda_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveListingCtx687eda_Endpoint(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_EndpointDefault(void* ptr);
void ApproveListingCtx687eda_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveListingCtx687eda_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveListingCtx687eda_ConnectEndpointChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectEndpointChanged(void* ptr);
void ApproveListingCtx687eda_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveListingCtx687eda_From(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_FromDefault(void* ptr);
void ApproveListingCtx687eda_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveListingCtx687eda_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveListingCtx687eda_ConnectFromChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectFromChanged(void* ptr);
void ApproveListingCtx687eda_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveListingCtx687eda_Message(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_MessageDefault(void* ptr);
void ApproveListingCtx687eda_SetMessage(void* ptr, struct Moc_PackedString message);
void ApproveListingCtx687eda_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void ApproveListingCtx687eda_ConnectMessageChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectMessageChanged(void* ptr);
void ApproveListingCtx687eda_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString ApproveListingCtx687eda_RawData(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_RawDataDefault(void* ptr);
void ApproveListingCtx687eda_SetRawData(void* ptr, struct Moc_PackedString rawData);
void ApproveListingCtx687eda_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void ApproveListingCtx687eda_ConnectRawDataChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectRawDataChanged(void* ptr);
void ApproveListingCtx687eda_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString ApproveListingCtx687eda_Hash(void* ptr);
struct Moc_PackedString ApproveListingCtx687eda_HashDefault(void* ptr);
void ApproveListingCtx687eda_SetHash(void* ptr, struct Moc_PackedString hash);
void ApproveListingCtx687eda_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void ApproveListingCtx687eda_ConnectHashChanged(void* ptr, long long t);
void ApproveListingCtx687eda_DisconnectHashChanged(void* ptr);
void ApproveListingCtx687eda_HashChanged(void* ptr, struct Moc_PackedString hash);
int ApproveListingCtx687eda_ApproveListingCtx687eda_QRegisterMetaType();
int ApproveListingCtx687eda_ApproveListingCtx687eda_QRegisterMetaType2(char* typeName);
int ApproveListingCtx687eda_ApproveListingCtx687eda_QmlRegisterType();
int ApproveListingCtx687eda_ApproveListingCtx687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int ApproveListingCtx687eda_ApproveListingCtx687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
void* ApproveListingCtx687eda___children_atList(void* ptr, int i);
void ApproveListingCtx687eda___children_setList(void* ptr, void* i);
void* ApproveListingCtx687eda___children_newList(void* ptr);
void* ApproveListingCtx687eda___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveListingCtx687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveListingCtx687eda___dynamicPropertyNames_newList(void* ptr);
void* ApproveListingCtx687eda___findChildren_atList(void* ptr, int i);
void ApproveListingCtx687eda___findChildren_setList(void* ptr, void* i);
void* ApproveListingCtx687eda___findChildren_newList(void* ptr);
void* ApproveListingCtx687eda___findChildren_atList3(void* ptr, int i);
void ApproveListingCtx687eda___findChildren_setList3(void* ptr, void* i);
void* ApproveListingCtx687eda___findChildren_newList3(void* ptr);
void* ApproveListingCtx687eda_NewApproveListingCtx(void* parent);
void ApproveListingCtx687eda_DestroyApproveListingCtx(void* ptr);
void ApproveListingCtx687eda_DestroyApproveListingCtxDefault(void* ptr);
void ApproveListingCtx687eda_ChildEventDefault(void* ptr, void* event);
void ApproveListingCtx687eda_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveListingCtx687eda_CustomEventDefault(void* ptr, void* event);
void ApproveListingCtx687eda_DeleteLaterDefault(void* ptr);
void ApproveListingCtx687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char ApproveListingCtx687eda_EventDefault(void* ptr, void* e);
char ApproveListingCtx687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void ApproveListingCtx687eda_TimerEventDefault(void* ptr, void* event);
void ApproveSignDataCtx687eda_ConnectClicked(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectClicked(void* ptr);
void ApproveSignDataCtx687eda_Clicked(void* ptr, int b);
void ApproveSignDataCtx687eda_ConnectOnBack(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectOnBack(void* ptr);
void ApproveSignDataCtx687eda_OnBack(void* ptr);
void ApproveSignDataCtx687eda_ConnectOnApprove(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectOnApprove(void* ptr);
void ApproveSignDataCtx687eda_OnApprove(void* ptr);
void ApproveSignDataCtx687eda_ConnectOnReject(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectOnReject(void* ptr);
void ApproveSignDataCtx687eda_OnReject(void* ptr);
void ApproveSignDataCtx687eda_ConnectEdited(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectEdited(void* ptr);
void ApproveSignDataCtx687eda_Edited(void* ptr, struct Moc_PackedString b, struct Moc_PackedString value);
struct Moc_PackedString ApproveSignDataCtx687eda_Remote(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_RemoteDefault(void* ptr);
void ApproveSignDataCtx687eda_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveSignDataCtx687eda_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveSignDataCtx687eda_ConnectRemoteChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectRemoteChanged(void* ptr);
void ApproveSignDataCtx687eda_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveSignDataCtx687eda_Transport(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_TransportDefault(void* ptr);
void ApproveSignDataCtx687eda_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveSignDataCtx687eda_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveSignDataCtx687eda_ConnectTransportChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectTransportChanged(void* ptr);
void ApproveSignDataCtx687eda_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveSignDataCtx687eda_Endpoint(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_EndpointDefault(void* ptr);
void ApproveSignDataCtx687eda_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveSignDataCtx687eda_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveSignDataCtx687eda_ConnectEndpointChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectEndpointChanged(void* ptr);
void ApproveSignDataCtx687eda_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveSignDataCtx687eda_From(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_FromDefault(void* ptr);
void ApproveSignDataCtx687eda_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveSignDataCtx687eda_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveSignDataCtx687eda_ConnectFromChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectFromChanged(void* ptr);
void ApproveSignDataCtx687eda_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveSignDataCtx687eda_Message(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_MessageDefault(void* ptr);
void ApproveSignDataCtx687eda_SetMessage(void* ptr, struct Moc_PackedString message);
void ApproveSignDataCtx687eda_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void ApproveSignDataCtx687eda_ConnectMessageChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectMessageChanged(void* ptr);
void ApproveSignDataCtx687eda_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString ApproveSignDataCtx687eda_RawData(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_RawDataDefault(void* ptr);
void ApproveSignDataCtx687eda_SetRawData(void* ptr, struct Moc_PackedString rawData);
void ApproveSignDataCtx687eda_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void ApproveSignDataCtx687eda_ConnectRawDataChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectRawDataChanged(void* ptr);
void ApproveSignDataCtx687eda_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString ApproveSignDataCtx687eda_Hash(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_HashDefault(void* ptr);
void ApproveSignDataCtx687eda_SetHash(void* ptr, struct Moc_PackedString hash);
void ApproveSignDataCtx687eda_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void ApproveSignDataCtx687eda_ConnectHashChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectHashChanged(void* ptr);
void ApproveSignDataCtx687eda_HashChanged(void* ptr, struct Moc_PackedString hash);
struct Moc_PackedString ApproveSignDataCtx687eda_Password(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_PasswordDefault(void* ptr);
void ApproveSignDataCtx687eda_SetPassword(void* ptr, struct Moc_PackedString password);
void ApproveSignDataCtx687eda_SetPasswordDefault(void* ptr, struct Moc_PackedString password);
void ApproveSignDataCtx687eda_ConnectPasswordChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectPasswordChanged(void* ptr);
void ApproveSignDataCtx687eda_PasswordChanged(void* ptr, struct Moc_PackedString password);
struct Moc_PackedString ApproveSignDataCtx687eda_FromSrc(void* ptr);
struct Moc_PackedString ApproveSignDataCtx687eda_FromSrcDefault(void* ptr);
void ApproveSignDataCtx687eda_SetFromSrc(void* ptr, struct Moc_PackedString fromSrc);
void ApproveSignDataCtx687eda_SetFromSrcDefault(void* ptr, struct Moc_PackedString fromSrc);
void ApproveSignDataCtx687eda_ConnectFromSrcChanged(void* ptr, long long t);
void ApproveSignDataCtx687eda_DisconnectFromSrcChanged(void* ptr);
void ApproveSignDataCtx687eda_FromSrcChanged(void* ptr, struct Moc_PackedString fromSrc);
int ApproveSignDataCtx687eda_ApproveSignDataCtx687eda_QRegisterMetaType();
int ApproveSignDataCtx687eda_ApproveSignDataCtx687eda_QRegisterMetaType2(char* typeName);
int ApproveSignDataCtx687eda_ApproveSignDataCtx687eda_QmlRegisterType();
int ApproveSignDataCtx687eda_ApproveSignDataCtx687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int ApproveSignDataCtx687eda_ApproveSignDataCtx687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
void* ApproveSignDataCtx687eda___children_atList(void* ptr, int i);
void ApproveSignDataCtx687eda___children_setList(void* ptr, void* i);
void* ApproveSignDataCtx687eda___children_newList(void* ptr);
void* ApproveSignDataCtx687eda___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveSignDataCtx687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveSignDataCtx687eda___dynamicPropertyNames_newList(void* ptr);
void* ApproveSignDataCtx687eda___findChildren_atList(void* ptr, int i);
void ApproveSignDataCtx687eda___findChildren_setList(void* ptr, void* i);
void* ApproveSignDataCtx687eda___findChildren_newList(void* ptr);
void* ApproveSignDataCtx687eda___findChildren_atList3(void* ptr, int i);
void ApproveSignDataCtx687eda___findChildren_setList3(void* ptr, void* i);
void* ApproveSignDataCtx687eda___findChildren_newList3(void* ptr);
void* ApproveSignDataCtx687eda_NewApproveSignDataCtx(void* parent);
void ApproveSignDataCtx687eda_DestroyApproveSignDataCtx(void* ptr);
void ApproveSignDataCtx687eda_DestroyApproveSignDataCtxDefault(void* ptr);
void ApproveSignDataCtx687eda_ChildEventDefault(void* ptr, void* event);
void ApproveSignDataCtx687eda_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveSignDataCtx687eda_CustomEventDefault(void* ptr, void* event);
void ApproveSignDataCtx687eda_DeleteLaterDefault(void* ptr);
void ApproveSignDataCtx687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char ApproveSignDataCtx687eda_EventDefault(void* ptr, void* e);
char ApproveSignDataCtx687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void ApproveSignDataCtx687eda_TimerEventDefault(void* ptr, void* event);
void ApproveTxCtx687eda_ConnectApprove(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectApprove(void* ptr);
void ApproveTxCtx687eda_Approve(void* ptr);
void ApproveTxCtx687eda_ConnectReject(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectReject(void* ptr);
void ApproveTxCtx687eda_Reject(void* ptr);
void ApproveTxCtx687eda_ConnectCheckTxDiff(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectCheckTxDiff(void* ptr);
void ApproveTxCtx687eda_CheckTxDiff(void* ptr);
void ApproveTxCtx687eda_ConnectBack(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectBack(void* ptr);
void ApproveTxCtx687eda_Back(void* ptr);
void ApproveTxCtx687eda_ConnectEdited(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectEdited(void* ptr);
void ApproveTxCtx687eda_Edited(void* ptr, struct Moc_PackedString s, struct Moc_PackedString v);
void ApproveTxCtx687eda_ConnectChangeValueUnit(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectChangeValueUnit(void* ptr);
void ApproveTxCtx687eda_ChangeValueUnit(void* ptr, int v);
void ApproveTxCtx687eda_ConnectChangeGasPriceUnit(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectChangeGasPriceUnit(void* ptr);
void ApproveTxCtx687eda_ChangeGasPriceUnit(void* ptr, int v);
int ApproveTxCtx687eda_ValueUnit(void* ptr);
int ApproveTxCtx687eda_ValueUnitDefault(void* ptr);
void ApproveTxCtx687eda_SetValueUnit(void* ptr, int valueUnit);
void ApproveTxCtx687eda_SetValueUnitDefault(void* ptr, int valueUnit);
void ApproveTxCtx687eda_ConnectValueUnitChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectValueUnitChanged(void* ptr);
void ApproveTxCtx687eda_ValueUnitChanged(void* ptr, int valueUnit);
struct Moc_PackedString ApproveTxCtx687eda_Remote(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_RemoteDefault(void* ptr);
void ApproveTxCtx687eda_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveTxCtx687eda_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveTxCtx687eda_ConnectRemoteChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectRemoteChanged(void* ptr);
void ApproveTxCtx687eda_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveTxCtx687eda_Transport(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_TransportDefault(void* ptr);
void ApproveTxCtx687eda_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveTxCtx687eda_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveTxCtx687eda_ConnectTransportChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectTransportChanged(void* ptr);
void ApproveTxCtx687eda_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveTxCtx687eda_Endpoint(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_EndpointDefault(void* ptr);
void ApproveTxCtx687eda_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveTxCtx687eda_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveTxCtx687eda_ConnectEndpointChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectEndpointChanged(void* ptr);
void ApproveTxCtx687eda_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveTxCtx687eda_Data(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_DataDefault(void* ptr);
void ApproveTxCtx687eda_SetData(void* ptr, struct Moc_PackedString data);
void ApproveTxCtx687eda_SetDataDefault(void* ptr, struct Moc_PackedString data);
void ApproveTxCtx687eda_ConnectDataChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectDataChanged(void* ptr);
void ApproveTxCtx687eda_DataChanged(void* ptr, struct Moc_PackedString data);
struct Moc_PackedString ApproveTxCtx687eda_From(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_FromDefault(void* ptr);
void ApproveTxCtx687eda_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveTxCtx687eda_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveTxCtx687eda_ConnectFromChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectFromChanged(void* ptr);
void ApproveTxCtx687eda_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveTxCtx687eda_FromWarning(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_FromWarningDefault(void* ptr);
void ApproveTxCtx687eda_SetFromWarning(void* ptr, struct Moc_PackedString fromWarning);
void ApproveTxCtx687eda_SetFromWarningDefault(void* ptr, struct Moc_PackedString fromWarning);
void ApproveTxCtx687eda_ConnectFromWarningChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectFromWarningChanged(void* ptr);
void ApproveTxCtx687eda_FromWarningChanged(void* ptr, struct Moc_PackedString fromWarning);
char ApproveTxCtx687eda_IsFromVisible(void* ptr);
char ApproveTxCtx687eda_IsFromVisibleDefault(void* ptr);
void ApproveTxCtx687eda_SetFromVisible(void* ptr, char fromVisible);
void ApproveTxCtx687eda_SetFromVisibleDefault(void* ptr, char fromVisible);
void ApproveTxCtx687eda_ConnectFromVisibleChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectFromVisibleChanged(void* ptr);
void ApproveTxCtx687eda_FromVisibleChanged(void* ptr, char fromVisible);
struct Moc_PackedString ApproveTxCtx687eda_To(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_ToDefault(void* ptr);
void ApproveTxCtx687eda_SetTo(void* ptr, struct Moc_PackedString to);
void ApproveTxCtx687eda_SetToDefault(void* ptr, struct Moc_PackedString to);
void ApproveTxCtx687eda_ConnectToChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectToChanged(void* ptr);
void ApproveTxCtx687eda_ToChanged(void* ptr, struct Moc_PackedString to);
struct Moc_PackedString ApproveTxCtx687eda_ToWarning(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_ToWarningDefault(void* ptr);
void ApproveTxCtx687eda_SetToWarning(void* ptr, struct Moc_PackedString toWarning);
void ApproveTxCtx687eda_SetToWarningDefault(void* ptr, struct Moc_PackedString toWarning);
void ApproveTxCtx687eda_ConnectToWarningChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectToWarningChanged(void* ptr);
void ApproveTxCtx687eda_ToWarningChanged(void* ptr, struct Moc_PackedString toWarning);
char ApproveTxCtx687eda_IsToVisible(void* ptr);
char ApproveTxCtx687eda_IsToVisibleDefault(void* ptr);
void ApproveTxCtx687eda_SetToVisible(void* ptr, char toVisible);
void ApproveTxCtx687eda_SetToVisibleDefault(void* ptr, char toVisible);
void ApproveTxCtx687eda_ConnectToVisibleChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectToVisibleChanged(void* ptr);
void ApproveTxCtx687eda_ToVisibleChanged(void* ptr, char toVisible);
struct Moc_PackedString ApproveTxCtx687eda_Gas(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_GasDefault(void* ptr);
void ApproveTxCtx687eda_SetGas(void* ptr, struct Moc_PackedString gas);
void ApproveTxCtx687eda_SetGasDefault(void* ptr, struct Moc_PackedString gas);
void ApproveTxCtx687eda_ConnectGasChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectGasChanged(void* ptr);
void ApproveTxCtx687eda_GasChanged(void* ptr, struct Moc_PackedString gas);
struct Moc_PackedString ApproveTxCtx687eda_GasPrice(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_GasPriceDefault(void* ptr);
void ApproveTxCtx687eda_SetGasPrice(void* ptr, struct Moc_PackedString gasPrice);
void ApproveTxCtx687eda_SetGasPriceDefault(void* ptr, struct Moc_PackedString gasPrice);
void ApproveTxCtx687eda_ConnectGasPriceChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectGasPriceChanged(void* ptr);
void ApproveTxCtx687eda_GasPriceChanged(void* ptr, struct Moc_PackedString gasPrice);
int ApproveTxCtx687eda_GasPriceUnit(void* ptr);
int ApproveTxCtx687eda_GasPriceUnitDefault(void* ptr);
void ApproveTxCtx687eda_SetGasPriceUnit(void* ptr, int gasPriceUnit);
void ApproveTxCtx687eda_SetGasPriceUnitDefault(void* ptr, int gasPriceUnit);
void ApproveTxCtx687eda_ConnectGasPriceUnitChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectGasPriceUnitChanged(void* ptr);
void ApproveTxCtx687eda_GasPriceUnitChanged(void* ptr, int gasPriceUnit);
struct Moc_PackedString ApproveTxCtx687eda_Nonce(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_NonceDefault(void* ptr);
void ApproveTxCtx687eda_SetNonce(void* ptr, struct Moc_PackedString nonce);
void ApproveTxCtx687eda_SetNonceDefault(void* ptr, struct Moc_PackedString nonce);
void ApproveTxCtx687eda_ConnectNonceChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectNonceChanged(void* ptr);
void ApproveTxCtx687eda_NonceChanged(void* ptr, struct Moc_PackedString nonce);
struct Moc_PackedString ApproveTxCtx687eda_Value(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_ValueDefault(void* ptr);
void ApproveTxCtx687eda_SetValue(void* ptr, struct Moc_PackedString value);
void ApproveTxCtx687eda_SetValueDefault(void* ptr, struct Moc_PackedString value);
void ApproveTxCtx687eda_ConnectValueChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectValueChanged(void* ptr);
void ApproveTxCtx687eda_ValueChanged(void* ptr, struct Moc_PackedString value);
struct Moc_PackedString ApproveTxCtx687eda_Password(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_PasswordDefault(void* ptr);
void ApproveTxCtx687eda_SetPassword(void* ptr, struct Moc_PackedString password);
void ApproveTxCtx687eda_SetPasswordDefault(void* ptr, struct Moc_PackedString password);
void ApproveTxCtx687eda_ConnectPasswordChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectPasswordChanged(void* ptr);
void ApproveTxCtx687eda_PasswordChanged(void* ptr, struct Moc_PackedString password);
struct Moc_PackedString ApproveTxCtx687eda_FromSrc(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_FromSrcDefault(void* ptr);
void ApproveTxCtx687eda_SetFromSrc(void* ptr, struct Moc_PackedString fromSrc);
void ApproveTxCtx687eda_SetFromSrcDefault(void* ptr, struct Moc_PackedString fromSrc);
void ApproveTxCtx687eda_ConnectFromSrcChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectFromSrcChanged(void* ptr);
void ApproveTxCtx687eda_FromSrcChanged(void* ptr, struct Moc_PackedString fromSrc);
struct Moc_PackedString ApproveTxCtx687eda_ToSrc(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_ToSrcDefault(void* ptr);
void ApproveTxCtx687eda_SetToSrc(void* ptr, struct Moc_PackedString toSrc);
void ApproveTxCtx687eda_SetToSrcDefault(void* ptr, struct Moc_PackedString toSrc);
void ApproveTxCtx687eda_ConnectToSrcChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectToSrcChanged(void* ptr);
void ApproveTxCtx687eda_ToSrcChanged(void* ptr, struct Moc_PackedString toSrc);
struct Moc_PackedString ApproveTxCtx687eda_Diff(void* ptr);
struct Moc_PackedString ApproveTxCtx687eda_DiffDefault(void* ptr);
void ApproveTxCtx687eda_SetDiff(void* ptr, struct Moc_PackedString diff);
void ApproveTxCtx687eda_SetDiffDefault(void* ptr, struct Moc_PackedString diff);
void ApproveTxCtx687eda_ConnectDiffChanged(void* ptr, long long t);
void ApproveTxCtx687eda_DisconnectDiffChanged(void* ptr);
void ApproveTxCtx687eda_DiffChanged(void* ptr, struct Moc_PackedString diff);
int ApproveTxCtx687eda_ApproveTxCtx687eda_QRegisterMetaType();
int ApproveTxCtx687eda_ApproveTxCtx687eda_QRegisterMetaType2(char* typeName);
int ApproveTxCtx687eda_ApproveTxCtx687eda_QmlRegisterType();
int ApproveTxCtx687eda_ApproveTxCtx687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int ApproveTxCtx687eda_ApproveTxCtx687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
void* ApproveTxCtx687eda___children_atList(void* ptr, int i);
void ApproveTxCtx687eda___children_setList(void* ptr, void* i);
void* ApproveTxCtx687eda___children_newList(void* ptr);
void* ApproveTxCtx687eda___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveTxCtx687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveTxCtx687eda___dynamicPropertyNames_newList(void* ptr);
void* ApproveTxCtx687eda___findChildren_atList(void* ptr, int i);
void ApproveTxCtx687eda___findChildren_setList(void* ptr, void* i);
void* ApproveTxCtx687eda___findChildren_newList(void* ptr);
void* ApproveTxCtx687eda___findChildren_atList3(void* ptr, int i);
void ApproveTxCtx687eda___findChildren_setList3(void* ptr, void* i);
void* ApproveTxCtx687eda___findChildren_newList3(void* ptr);
void* ApproveTxCtx687eda_NewApproveTxCtx(void* parent);
void ApproveTxCtx687eda_DestroyApproveTxCtx(void* ptr);
void ApproveTxCtx687eda_DestroyApproveTxCtxDefault(void* ptr);
void ApproveTxCtx687eda_ChildEventDefault(void* ptr, void* event);
void ApproveTxCtx687eda_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveTxCtx687eda_CustomEventDefault(void* ptr, void* event);
void ApproveTxCtx687eda_DeleteLaterDefault(void* ptr);
void ApproveTxCtx687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char ApproveTxCtx687eda_EventDefault(void* ptr, void* e);
char ApproveTxCtx687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void ApproveTxCtx687eda_TimerEventDefault(void* ptr, void* event);
void CustomListModel687eda_ConnectClear(void* ptr, long long t);
void CustomListModel687eda_DisconnectClear(void* ptr);
void CustomListModel687eda_Clear(void* ptr);
void CustomListModel687eda_ConnectAdd(void* ptr, long long t);
void CustomListModel687eda_DisconnectAdd(void* ptr);
void CustomListModel687eda_Add(void* ptr, uintptr_t account);
void CustomListModel687eda_CallbackFromQml(void* ptr);
struct Moc_PackedString CustomListModel687eda_UpdateRequired(void* ptr);
struct Moc_PackedString CustomListModel687eda_UpdateRequiredDefault(void* ptr);
void CustomListModel687eda_SetUpdateRequired(void* ptr, struct Moc_PackedString updateRequired);
void CustomListModel687eda_SetUpdateRequiredDefault(void* ptr, struct Moc_PackedString updateRequired);
void CustomListModel687eda_ConnectUpdateRequiredChanged(void* ptr, long long t);
void CustomListModel687eda_DisconnectUpdateRequiredChanged(void* ptr);
void CustomListModel687eda_UpdateRequiredChanged(void* ptr, struct Moc_PackedString updateRequired);
int CustomListModel687eda_CustomListModel687eda_QRegisterMetaType();
int CustomListModel687eda_CustomListModel687eda_QRegisterMetaType2(char* typeName);
int CustomListModel687eda_CustomListModel687eda_QmlRegisterType();
int CustomListModel687eda_CustomListModel687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int CustomListModel687eda_CustomListModel687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
int CustomListModel687eda_____itemData_keyList_atList(void* ptr, int i);
void CustomListModel687eda_____itemData_keyList_setList(void* ptr, int i);
void* CustomListModel687eda_____itemData_keyList_newList(void* ptr);
int CustomListModel687eda_____roleNames_keyList_atList(void* ptr, int i);
void CustomListModel687eda_____roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel687eda_____roleNames_keyList_newList(void* ptr);
int CustomListModel687eda_____setItemData_roles_keyList_atList(void* ptr, int i);
void CustomListModel687eda_____setItemData_roles_keyList_setList(void* ptr, int i);
void* CustomListModel687eda_____setItemData_roles_keyList_newList(void* ptr);
void* CustomListModel687eda___changePersistentIndexList_from_atList(void* ptr, int i);
void CustomListModel687eda___changePersistentIndexList_from_setList(void* ptr, void* i);
void* CustomListModel687eda___changePersistentIndexList_from_newList(void* ptr);
void* CustomListModel687eda___changePersistentIndexList_to_atList(void* ptr, int i);
void CustomListModel687eda___changePersistentIndexList_to_setList(void* ptr, void* i);
void* CustomListModel687eda___changePersistentIndexList_to_newList(void* ptr);
int CustomListModel687eda___dataChanged_roles_atList(void* ptr, int i);
void CustomListModel687eda___dataChanged_roles_setList(void* ptr, int i);
void* CustomListModel687eda___dataChanged_roles_newList(void* ptr);
void* CustomListModel687eda___itemData_atList(void* ptr, int v, int i);
void CustomListModel687eda___itemData_setList(void* ptr, int key, void* i);
void* CustomListModel687eda___itemData_newList(void* ptr);
struct Moc_PackedList CustomListModel687eda___itemData_keyList(void* ptr);
void* CustomListModel687eda___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void CustomListModel687eda___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* CustomListModel687eda___layoutAboutToBeChanged_parents_newList(void* ptr);
void* CustomListModel687eda___layoutChanged_parents_atList(void* ptr, int i);
void CustomListModel687eda___layoutChanged_parents_setList(void* ptr, void* i);
void* CustomListModel687eda___layoutChanged_parents_newList(void* ptr);
void* CustomListModel687eda___match_atList(void* ptr, int i);
void CustomListModel687eda___match_setList(void* ptr, void* i);
void* CustomListModel687eda___match_newList(void* ptr);
void* CustomListModel687eda___mimeData_indexes_atList(void* ptr, int i);
void CustomListModel687eda___mimeData_indexes_setList(void* ptr, void* i);
void* CustomListModel687eda___mimeData_indexes_newList(void* ptr);
void* CustomListModel687eda___persistentIndexList_atList(void* ptr, int i);
void CustomListModel687eda___persistentIndexList_setList(void* ptr, void* i);
void* CustomListModel687eda___persistentIndexList_newList(void* ptr);
void* CustomListModel687eda___roleNames_atList(void* ptr, int v, int i);
void CustomListModel687eda___roleNames_setList(void* ptr, int key, void* i);
void* CustomListModel687eda___roleNames_newList(void* ptr);
struct Moc_PackedList CustomListModel687eda___roleNames_keyList(void* ptr);
void* CustomListModel687eda___setItemData_roles_atList(void* ptr, int v, int i);
void CustomListModel687eda___setItemData_roles_setList(void* ptr, int key, void* i);
void* CustomListModel687eda___setItemData_roles_newList(void* ptr);
struct Moc_PackedList CustomListModel687eda___setItemData_roles_keyList(void* ptr);
int CustomListModel687eda_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void CustomListModel687eda_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel687eda_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int CustomListModel687eda_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void CustomListModel687eda_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel687eda_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* CustomListModel687eda___children_atList(void* ptr, int i);
void CustomListModel687eda___children_setList(void* ptr, void* i);
void* CustomListModel687eda___children_newList(void* ptr);
void* CustomListModel687eda___dynamicPropertyNames_atList(void* ptr, int i);
void CustomListModel687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* CustomListModel687eda___dynamicPropertyNames_newList(void* ptr);
void* CustomListModel687eda___findChildren_atList(void* ptr, int i);
void CustomListModel687eda___findChildren_setList(void* ptr, void* i);
void* CustomListModel687eda___findChildren_newList(void* ptr);
void* CustomListModel687eda___findChildren_atList3(void* ptr, int i);
void CustomListModel687eda___findChildren_setList3(void* ptr, void* i);
void* CustomListModel687eda___findChildren_newList3(void* ptr);
void* CustomListModel687eda_NewCustomListModel(void* parent);
void CustomListModel687eda_DestroyCustomListModel(void* ptr);
void CustomListModel687eda_DestroyCustomListModelDefault(void* ptr);
char CustomListModel687eda_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long CustomListModel687eda_FlagsDefault(void* ptr, void* index);
void* CustomListModel687eda_IndexDefault(void* ptr, int row, int column, void* parent);
void* CustomListModel687eda_SiblingDefault(void* ptr, int row, int column, void* idx);
void* CustomListModel687eda_BuddyDefault(void* ptr, void* index);
char CustomListModel687eda_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char CustomListModel687eda_CanFetchMoreDefault(void* ptr, void* parent);
int CustomListModel687eda_ColumnCountDefault(void* ptr, void* parent);
void* CustomListModel687eda_DataDefault(void* ptr, void* index, int role);
void CustomListModel687eda_FetchMoreDefault(void* ptr, void* parent);
char CustomListModel687eda_HasChildrenDefault(void* ptr, void* parent);
void* CustomListModel687eda_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char CustomListModel687eda_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char CustomListModel687eda_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList CustomListModel687eda_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList CustomListModel687eda_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* CustomListModel687eda_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString CustomListModel687eda_MimeTypesDefault(void* ptr);
char CustomListModel687eda_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char CustomListModel687eda_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* CustomListModel687eda_ParentDefault(void* ptr, void* index);
char CustomListModel687eda_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char CustomListModel687eda_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void CustomListModel687eda_ResetInternalDataDefault(void* ptr);
void CustomListModel687eda_RevertDefault(void* ptr);
struct Moc_PackedList CustomListModel687eda_RoleNamesDefault(void* ptr);
int CustomListModel687eda_RowCountDefault(void* ptr, void* parent);
char CustomListModel687eda_SetDataDefault(void* ptr, void* index, void* value, int role);
char CustomListModel687eda_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char CustomListModel687eda_SetItemDataDefault(void* ptr, void* index, void* roles);
void CustomListModel687eda_SortDefault(void* ptr, int column, long long order);
void* CustomListModel687eda_SpanDefault(void* ptr, void* index);
char CustomListModel687eda_SubmitDefault(void* ptr);
long long CustomListModel687eda_SupportedDragActionsDefault(void* ptr);
long long CustomListModel687eda_SupportedDropActionsDefault(void* ptr);
void CustomListModel687eda_ChildEventDefault(void* ptr, void* event);
void CustomListModel687eda_ConnectNotifyDefault(void* ptr, void* sign);
void CustomListModel687eda_CustomEventDefault(void* ptr, void* event);
void CustomListModel687eda_DeleteLaterDefault(void* ptr);
void CustomListModel687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char CustomListModel687eda_EventDefault(void* ptr, void* e);
char CustomListModel687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void CustomListModel687eda_TimerEventDefault(void* ptr, void* event);
void LoginContext687eda_ConnectStart(void* ptr, long long t);
void LoginContext687eda_DisconnectStart(void* ptr);
void LoginContext687eda_Start(void* ptr);
void LoginContext687eda_ConnectCheckPath(void* ptr, long long t);
void LoginContext687eda_DisconnectCheckPath(void* ptr);
void LoginContext687eda_CheckPath(void* ptr, struct Moc_PackedString b);
struct Moc_PackedString LoginContext687eda_ClefPath(void* ptr);
struct Moc_PackedString LoginContext687eda_ClefPathDefault(void* ptr);
void LoginContext687eda_SetClefPath(void* ptr, struct Moc_PackedString clefPath);
void LoginContext687eda_SetClefPathDefault(void* ptr, struct Moc_PackedString clefPath);
void LoginContext687eda_ConnectClefPathChanged(void* ptr, long long t);
void LoginContext687eda_DisconnectClefPathChanged(void* ptr);
void LoginContext687eda_ClefPathChanged(void* ptr, struct Moc_PackedString clefPath);
struct Moc_PackedString LoginContext687eda_BinaryHash(void* ptr);
struct Moc_PackedString LoginContext687eda_BinaryHashDefault(void* ptr);
void LoginContext687eda_SetBinaryHash(void* ptr, struct Moc_PackedString binaryHash);
void LoginContext687eda_SetBinaryHashDefault(void* ptr, struct Moc_PackedString binaryHash);
void LoginContext687eda_ConnectBinaryHashChanged(void* ptr, long long t);
void LoginContext687eda_DisconnectBinaryHashChanged(void* ptr);
void LoginContext687eda_BinaryHashChanged(void* ptr, struct Moc_PackedString binaryHash);
struct Moc_PackedString LoginContext687eda_Error(void* ptr);
struct Moc_PackedString LoginContext687eda_ErrorDefault(void* ptr);
void LoginContext687eda_SetError(void* ptr, struct Moc_PackedString error);
void LoginContext687eda_SetErrorDefault(void* ptr, struct Moc_PackedString error);
void LoginContext687eda_ConnectErrorChanged(void* ptr, long long t);
void LoginContext687eda_DisconnectErrorChanged(void* ptr);
void LoginContext687eda_ErrorChanged(void* ptr, struct Moc_PackedString error);
int LoginContext687eda_LoginContext687eda_QRegisterMetaType();
int LoginContext687eda_LoginContext687eda_QRegisterMetaType2(char* typeName);
int LoginContext687eda_LoginContext687eda_QmlRegisterType();
int LoginContext687eda_LoginContext687eda_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int LoginContext687eda_LoginContext687eda_QmlRegisterUncreatableType(char* uri, int versionMajor, int versionMinor, char* qmlName, struct Moc_PackedString message);
void* LoginContext687eda___children_atList(void* ptr, int i);
void LoginContext687eda___children_setList(void* ptr, void* i);
void* LoginContext687eda___children_newList(void* ptr);
void* LoginContext687eda___dynamicPropertyNames_atList(void* ptr, int i);
void LoginContext687eda___dynamicPropertyNames_setList(void* ptr, void* i);
void* LoginContext687eda___dynamicPropertyNames_newList(void* ptr);
void* LoginContext687eda___findChildren_atList(void* ptr, int i);
void LoginContext687eda___findChildren_setList(void* ptr, void* i);
void* LoginContext687eda___findChildren_newList(void* ptr);
void* LoginContext687eda___findChildren_atList3(void* ptr, int i);
void LoginContext687eda___findChildren_setList3(void* ptr, void* i);
void* LoginContext687eda___findChildren_newList3(void* ptr);
void* LoginContext687eda_NewLoginContext(void* parent);
void LoginContext687eda_DestroyLoginContext(void* ptr);
void LoginContext687eda_DestroyLoginContextDefault(void* ptr);
void LoginContext687eda_ChildEventDefault(void* ptr, void* event);
void LoginContext687eda_ConnectNotifyDefault(void* ptr, void* sign);
void LoginContext687eda_CustomEventDefault(void* ptr, void* event);
void LoginContext687eda_DeleteLaterDefault(void* ptr);
void LoginContext687eda_DisconnectNotifyDefault(void* ptr, void* sign);
char LoginContext687eda_EventDefault(void* ptr, void* e);
char LoginContext687eda_EventFilterDefault(void* ptr, void* watched, void* event);
;
void LoginContext687eda_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif